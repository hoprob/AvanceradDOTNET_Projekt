// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.API.Model;

namespace Projekt.API.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvanceradDOTNET_Projekt.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Såggatan 4, 43295 Varberg",
                            FirstName = "Karl",
                            LastName = "Karlsson",
                            Phone = "0796524936"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Sångvägen 8, 13659 Skellefteå",
                            FirstName = "Tommy",
                            LastName = "Nilsson",
                            Phone = "0794632846"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Odengatan 46, 76519 Stockholm",
                            FirstName = "Jonna",
                            LastName = "Mikaelsson",
                            Phone = "0736428585"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Tomtevägen 50B, 26489 Malmö",
                            FirstName = "Mats",
                            LastName = "Fransson",
                            Phone = "0796524936"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Magistervägen 2, 43294 Varberg",
                            FirstName = "Dagny",
                            LastName = "Svantesson",
                            Phone = "0754256925"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Plåtgatan 9, 52648 Falkenberg",
                            FirstName = "Jens",
                            LastName = "Haraldsson",
                            Phone = "0706175289"
                        });
                });

            modelBuilder.Entity("AvanceradDOTNET_Projekt.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectName = "Kvarteret Nystaden",
                            ProjectNumber = "55-2636"
                        },
                        new
                        {
                            Id = 2,
                            ProjectName = "Ombyggnad Kollebrien",
                            ProjectNumber = "54-9462"
                        },
                        new
                        {
                            Id = 3,
                            ProjectName = "Kvarteret Yxan",
                            ProjectNumber = "55-2856"
                        },
                        new
                        {
                            Id = 4,
                            ProjectName = "Ombyggnad Kommunhus C",
                            ProjectNumber = "54-5454"
                        },
                        new
                        {
                            Id = 5,
                            ProjectName = "Renovering Villa Markström",
                            ProjectNumber = "53-5521"
                        });
                });

            modelBuilder.Entity("AvanceradDOTNET_Projekt.Models.TimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("HoursWorked")
                        .HasColumnType("float");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimeReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            HoursWorked = 8.0,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            HoursWorked = 8.0,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            HoursWorked = 8.0,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            HoursWorked = 8.0,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            HoursWorked = 7.0,
                            ProjectId = 3
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            HoursWorked = 1.0,
                            ProjectId = 4
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2021, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            HoursWorked = 8.0,
                            ProjectId = 5
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            HoursWorked = 8.0,
                            ProjectId = 5
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            HoursWorked = 8.0,
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2022, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            HoursWorked = 8.0,
                            ProjectId = 6
                        });
                });

            modelBuilder.Entity("AvanceradDOTNET_Projekt.Models.TimeReport", b =>
                {
                    b.HasOne("AvanceradDOTNET_Projekt.Models.Employee", "Employee")
                        .WithMany("TimeReports")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanceradDOTNET_Projekt.Models.Project", "Project")
                        .WithMany("TimeReports")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
